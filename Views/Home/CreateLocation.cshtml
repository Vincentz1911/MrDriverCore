@model MrDriverCore.Models.Location

@{
    ViewData["Title"] = "Create Location";
}

<script>
    $(document).ready(function () {

        var latitude = 0;
        var longitude = 0;
        $("#txtLanguages").autocomplete({
            source: function (request, response) {

                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(showPosition);
                } else {
                    x.innerHTML = "Geolocation is not supported by this browser.";
                }


                function showPosition(position) {
                    latitude = position.coords.latitude;
                    longitude = position.coords.longitude
                }
                
                var url = "https://api.openrouteservice.org/geocode/autocomplete?api_key=5b3ce3597851110001cf6248acf21fffcf174a02b63b9c6dde867c62"
                    + "&text=" + txtLanguages.value
                    + "&focus.point.lon=" + longitude
                    + "&focus.point.lat=" + latitude
                    + "&boundary.circle.lon=" + longitude
                    + "&boundary.circle.lat=" + latitude
                    + "&boundary.circle.radius=1000";
                console.log(url);
                $.getJSON(url, null, function (data) {
                        console.log(longitude);

                        var features = data.features;

                        var locations = [];

                        features.forEach(feature => {
                            var location = {
                                label: feature.properties.label,
                                properties: feature.properties
                            }
                            console.log(location.properties);
                            locations.push(location);
                        })

                        // label = feature.properties.label

                        //var properties = features.properties
                        //console.log(features);
                        response($.map(locations, function (item) {
                            //var label = locations.label

                            return {
                                label: item.label,
                                value: item.label + ""
                            }
                        }))
                    })
            }
        });


    });


                //var request = new XMLHttpRequest();

                //request.open('GET', 'https://api.openrouteservice.org/geocode/autocomplete?api_key=5b3ce3597851110001cf6248acf21fffcf174a02b63b9c6dde867c62&text=' + txtLanguages.value);

                //request.setRequestHeader('Accept', 'application/json, application/geo+json, application/gpx+xml, img/png; charset=utf-8');

                //request.onreadystatechange = function () {
                //    if (this.readyState === 4) {

                //        console.log(this.response);

                //        response($.map(this.response, function () {
                //            console.log(response);
                //            var array1 = response.properties;
                //            let array2 = [];
                //            //array1.forEach(element => {

                //            //    console.log(element.label)
                //            //    var label = element.label
                //            //    let newLength = array2.push(element.label);
                //            //});

                //            return {
                //                label: array1,
                //                value: array1 + ""
                //                //label: array1.properties,
                //                //value: array1.properties + ""
                //            }
                //        }))




                //        //console.log('Status:', this.status);
                //        //console.log('Headers:', this.getAllResponseHeaders());
                //        //console.log('Body:', this.responseText);

                //        //return {
                //        //    label: item.properties,
                //        //    value: item + ""
                //        //}
                //    }
                //};

                //request.send();


    //var request = new XMLHttpRequest();

    //request.open('GET', 'https://api.openrouteservice.org/geocode/autocomplete?api_key=5b3ce3597851110001cf6248acf21fffcf174a02b63b9c6dde867c62&text=Toky');

    //request.setRequestHeader('Accept', 'application/json, application/geo+json, application/gpx+xml, img/png; charset=utf-8');

    //request.onreadystatechange = function () {
    //    if (this.readyState === 4) {
    //        console.log('Status:', this.status);
    //        console.log('Headers:', this.getAllResponseHeaders());
    //        console.log('Body:', this.responseText);
    //    }
    //};

    //request.send();
</script>

<h1>Create Location</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="CreateLocation">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Street" class="control-label"></label>
                <input asp-for="Street" class="form-control" />
                <span asp-validation-for="Street" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="City" class="control-label"></label>
                <input asp-for="City" class="form-control" />
                <span asp-validation-for="City" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
                <a asp-action="Index">Back to List</a>
            </div>
        </form>
    </div>


    <div class="ui-widget">
        <label for="tags">Tags: </label>
        <input type="text" ID="txtLanguages" oninput"apiCall()" />
    </div>
</div>

<div>

</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
